# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2019, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 2.1.0+/1499a97c2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-30 00:15+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../usage/extensions/viewcode.rst:2
msgid ":mod:`sphinx.ext.viewcode` -- Add links to highlighted source code"
msgstr ":mod:`sphinx.ext.viewcode` -- 添加突出显示的源代码的链接"

#: ../../usage/extensions/viewcode.rst:10
msgid ""
"This extension looks at your Python object descriptions (``.. class::``, "
"``.. function::`` etc.) and tries to find the source files where the "
"objects are contained.  When found, a separate HTML page will be output "
"for each module with a highlighted version of the source code, and a link"
" will be added to all object descriptions that leads to the source code "
"of the described object.  A link back from the source to the description "
"will also be inserted."
msgstr "这个扩展名查看你的Python对象描述(``.. class::``, ``.. function::`` 等)并尝试查找包含对象的源文件。找到后，将为每个模块输出一个单独的HTML页面，其中包含源代码的突出显示版本，并且链接将添加到所有对象描述中，这些描述将导致所描述对象的源代码。还将插入从源到描述的链接。"

#: ../../usage/extensions/viewcode.rst:19
msgid ""
"Basically, ``viewcode`` extension will import the modules being linked "
"to. If any modules have side effects on import, these will be executed "
"when ``sphinx-build`` is run."
msgstr "基本上， ``viewcode`` 扩展名将导入链接到的模块。如果任何模块在导入时有副作用，那么当运行 ``sphinx-build`` 时会执行这些副作用。"

#: ../../usage/extensions/viewcode.rst:23
msgid ""
"If you document scripts (as opposed to library modules), make sure their "
"main routine is protected by a ``if __name__ == '__main__'`` condition."
msgstr "如果您记录脚本（而不是库模块），请确保它们的主例程受 ``if __name__ == '__main__'`` 条件的保护。"

#: ../../usage/extensions/viewcode.rst:26
msgid ""
"In addition, if you don't want to import the modules by ``viewcode``, you"
" can tell the location of the location of source code to ``viewcode`` "
"using the :event:`viewcode-find-source` event."
msgstr "另外，如果你不想通过 ``viewcode`` 导入模块，你可以使用 :event:`viewcode-find-source` 事件来告诉源代码 ``viewcode`` 的位置。 。"

#: ../../usage/extensions/viewcode.rst:30
msgid ""
"If :confval:`viewcode_follow_imported_members` is enabled, you will also "
"need to resolve imported attributes using the :event:`viewcode-follow-"
"imported` event."
msgstr "如果 :confval:`viewcode_follow_imported_members` 已启用，您还需要使用 :event:`viewcode-follow-imported` 事件来解析导入的属性。"

#: ../../usage/extensions/viewcode.rst:34
msgid ""
"This extension works only on HTML related builders like ``html``, "
"``applehelp``, ``devhelp``, ``htmlhelp``, ``qthelp`` and so on except "
"``singlehtml``. By default ``epub`` builder doesn't support this "
"extension (see :confval:`viewcode_enable_epub`)."
msgstr "此扩展仅适用于HTML相关的构建器，如 ``html`` ， ``applehelp`` ， ``devhelp`` ， ``htmlhelp`` ， ``qthelp`` 等除了 ``singlehtml`` 。默认情况下， ``epub`` 构建器不支持此扩展（请参阅 :confval:`viewcode_enable_epub`）。"

#: ../../usage/extensions/viewcode.rst:40
msgid "Configuration"
msgstr "配置"

#: ../../usage/extensions/viewcode.rst:44
msgid ""
"If this is ``True``, viewcode extension will emit :event:`viewcode-"
"follow-imported` event to resolve the name of the module by other "
"extensions.  The default is ``True``."
msgstr ""

#: ../../usage/extensions/viewcode.rst:50
msgid "Renamed from ``viewcode_import`` to ``viewcode_follow_imported_members``."
msgstr "Renamed from ``viewcode_import`` to ``viewcode_follow_imported_members``."

#: ../../usage/extensions/viewcode.rst:55
msgid ""
"If this is ``True``, viewcode extension is also enabled even if you use "
"epub builders. This extension generates pages outside toctree, but this "
"is not preferred as epub format."
msgstr ""

#: ../../usage/extensions/viewcode.rst:59
msgid ""
"Until 1.4.x, this extension is always enabled. If you want to generate "
"epub as same as 1.4.x, you should set ``True``, but epub format checker's"
" score becomes worse."
msgstr ""

#: ../../usage/extensions/viewcode.rst:63
msgid "The default is ``False``."
msgstr "The default is ``False``."

#: ../../usage/extensions/viewcode.rst:69
msgid ""
"Not all epub readers support pages generated by viewcode extension. These"
" readers ignore links to pages are not under toctree."
msgstr ""

#: ../../usage/extensions/viewcode.rst:72
msgid ""
"Some reader's rendering result are corrupted and `epubcheck "
"<https://github.com/IDPF/epubcheck>`_'s score becomes worse even if the "
"reader supports."
msgstr ""

#: ../../usage/extensions/viewcode.rst:80
msgid ""
"Find the source code for a module. An event handler for this event should"
" return a tuple of the source code itself and a dictionary of tags. The "
"dictionary maps the name of a class, function, attribute, etc to a tuple "
"of its type, the start line number, and the end line number. The type "
"should be one of \"class\", \"def\", or \"other\"."
msgstr ""

#: ../../usage/extensions/viewcode.rst
msgid "参数"
msgstr "参数"

#: ../../usage/extensions/viewcode.rst:87
#: ../../usage/extensions/viewcode.rst:96
msgid "The Sphinx application object."
msgstr "The Sphinx application object."

#: ../../usage/extensions/viewcode.rst:88
msgid "The name of the module to find source code for."
msgstr "The name of the module to find source code for."

#: ../../usage/extensions/viewcode.rst:94
msgid "Find the name of the original module for an attribute."
msgstr "Find the name of the original module for an attribute."

#: ../../usage/extensions/viewcode.rst:97
msgid "The name of the module that the attribute belongs to."
msgstr "The name of the module that the attribute belongs to."

#: ../../usage/extensions/viewcode.rst:98
msgid "The name of the member to follow."
msgstr "The name of the member to follow."

#~ msgid "Parameters"
#~ msgstr ""

