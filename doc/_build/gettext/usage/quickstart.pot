# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2019, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 2.1.0+/89df177\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-30 00:15+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../usage/quickstart.rst:3
msgid "Getting Started"
msgstr ""

#: ../../usage/quickstart.rst:5
msgid "Once Sphinx is :doc:`installed </usage/installation>`, you can proceed with setting up your first Sphinx project. To ease the process of getting started, Sphinx provides a tool, :program:`sphinx-quickstart`, which will generate a documentation source directory and populate it with some defaults. We're going to use the :program:`sphinx-quickstart` tool here, though it's use by no means necessary."
msgstr ""

#: ../../usage/quickstart.rst:14
msgid "Setting up the documentation sources"
msgstr ""

#: ../../usage/quickstart.rst:16
msgid "The root directory of a Sphinx collection of :term:`reStructuredText` document sources is called the :term:`source directory`.  This directory also contains the Sphinx configuration file :file:`conf.py`, where you can configure all aspects of how Sphinx reads your sources and builds your documentation.  [#]_"
msgstr ""

#: ../../usage/quickstart.rst:21
msgid "Sphinx comes with a script called :program:`sphinx-quickstart` that sets up a source directory and creates a default :file:`conf.py` with the most useful configuration values from a few questions it asks you. To use this, run:"
msgstr ""

#: ../../usage/quickstart.rst:29
msgid "Answer each question asked. Be sure to say yes to the ``autodoc`` extension, as we will use this later."
msgstr ""

#: ../../usage/quickstart.rst:32
msgid "There is also an automatic \"API documentation\" generator called :program:`sphinx-apidoc`; see :doc:`/man/sphinx-apidoc` for details."
msgstr ""

#: ../../usage/quickstart.rst:37
msgid "Defining document structure"
msgstr ""

#: ../../usage/quickstart.rst:39
msgid "Let's assume you've run :program:`sphinx-quickstart`.  It created a source directory with :file:`conf.py` and a master document, :file:`index.rst` (if you accepted the defaults).  The main function of the :term:`master document` is to serve as a welcome page, and to contain the root of the \"table of contents tree\" (or *toctree*).  This is one of the main things that Sphinx adds to reStructuredText, a way to connect multiple files to a single hierarchy of documents."
msgstr ""

#: ../../usage/quickstart.rst:None
msgid "reStructuredText directives"
msgstr ""

#: ../../usage/quickstart.rst:49
msgid "``toctree`` is a reStructuredText :dfn:`directive`, a very versatile piece of markup.  Directives can have arguments, options and content."
msgstr ""

#: ../../usage/quickstart.rst:52
msgid "*Arguments* are given directly after the double colon following the directive's name.  Each directive decides whether it can have arguments, and how many."
msgstr ""

#: ../../usage/quickstart.rst:56
msgid "*Options* are given after the arguments, in form of a \"field list\".  The ``maxdepth`` is such an option for the ``toctree`` directive."
msgstr ""

#: ../../usage/quickstart.rst:59
msgid "*Content* follows the options or arguments after a blank line.  Each directive decides whether to allow content, and what to do with it."
msgstr ""

#: ../../usage/quickstart.rst:62
msgid "A common gotcha with directives is that **the first line of the content must be indented to the same level as the options are**."
msgstr ""

#: ../../usage/quickstart.rst:65
msgid "The ``toctree`` directive initially is empty, and looks like so:"
msgstr ""

#: ../../usage/quickstart.rst:72
msgid "You add documents listing them in the *content* of the directive:"
msgstr ""

#: ../../usage/quickstart.rst:83
msgid "This is exactly how the ``toctree`` for this documentation looks.  The documents to include are given as :term:`document name`\\ s, which in short means that you leave off the file name extension and use forward slashes (``/``) as directory separators."
msgstr ""

#: ../../usage/quickstart.rst:88
msgid "|more| Read more about :ref:`the toctree directive <toctree-directive>`."
msgstr ""

#: ../../usage/quickstart.rst:90
msgid "You can now create the files you listed in the ``toctree`` and add content, and their section titles will be inserted (up to the ``maxdepth`` level) at the place where the ``toctree`` directive is placed.  Also, Sphinx now knows about the order and hierarchy of your documents.  (They may contain ``toctree`` directives themselves, which means you can create deeply nested hierarchies if necessary.)"
msgstr ""

#: ../../usage/quickstart.rst:99
msgid "Adding content"
msgstr ""

#: ../../usage/quickstart.rst:101
msgid "In Sphinx source files, you can use most features of standard :term:`reStructuredText`.  There are also several features added by Sphinx. For example, you can add cross-file references in a portable way (which works for all output types) using the :rst:role:`ref` role."
msgstr ""

#: ../../usage/quickstart.rst:106
msgid "For an example, if you are viewing the HTML version you can look at the source for this document -- use the \"Show Source\" link in the sidebar."
msgstr ""

#: ../../usage/quickstart.rst:109
#: ../../usage/quickstart.rst:151
#: ../../usage/quickstart.rst:243
#: ../../usage/quickstart.rst:286
msgid "待处理"
msgstr ""

#: ../../usage/quickstart.rst:109
msgid "Update the below link when we add new guides on these."
msgstr ""

#: ../../usage/quickstart.rst:111
msgid "|more| See :doc:`/usage/restructuredtext/index` for a more in-depth introduction to reStructuredText, including markup added by Sphinx."
msgstr ""

#: ../../usage/quickstart.rst:116
msgid "Running the build"
msgstr ""

#: ../../usage/quickstart.rst:118
msgid "Now that you have added some files and content, let's make a first build of the docs.  A build is started with the :program:`sphinx-build` program:"
msgstr ""

#: ../../usage/quickstart.rst:125
msgid "where *sourcedir* is the :term:`source directory`, and *builddir* is the directory in which you want to place the built documentation. The :option:`-b <sphinx-build -b>` option selects a builder; in this example Sphinx will build HTML files."
msgstr ""

#: ../../usage/quickstart.rst:130
msgid "|more| Refer to the :doc:`sphinx-build man page </man/sphinx-build>` for all options that :program:`sphinx-build` supports."
msgstr ""

#: ../../usage/quickstart.rst:133
msgid "However, :program:`sphinx-quickstart` script creates a :file:`Makefile` and a :file:`make.bat` which make life even easier for you. These can be executed by running :command:`make` with the name of the builder. For example."
msgstr ""

#: ../../usage/quickstart.rst:141
msgid "This will build HTML docs in the build directory you chose. Execute :command:`make` without an argument to see which targets are available."
msgstr ""

#: ../../usage/quickstart.rst:144
msgid "How do I generate PDF documents?"
msgstr ""

#: ../../usage/quickstart.rst:146
msgid "``make latexpdf`` runs the :mod:`LaTeX builder <sphinx.builders.latex.LaTeXBuilder>` and readily invokes the pdfTeX toolchain for you."
msgstr ""

#: ../../usage/quickstart.rst:151
msgid "Move this whole section into a guide on rST or directives"
msgstr ""

#: ../../usage/quickstart.rst:154
msgid "Documenting objects"
msgstr ""

#: ../../usage/quickstart.rst:156
msgid "One of Sphinx's main objectives is easy documentation of :dfn:`objects` (in a very general sense) in any :dfn:`domain`.  A domain is a collection of object types that belong together, complete with markup to create and reference descriptions of these objects."
msgstr ""

#: ../../usage/quickstart.rst:161
msgid "The most prominent domain is the Python domain. For example, to document Python's built-in function ``enumerate()``, you would add this to one of your source files."
msgstr ""

#: ../../usage/quickstart.rst:172
msgid "This is rendered like this:"
msgstr ""

#: ../../usage/quickstart.rst:176
msgid "Return an iterator that yields tuples of an index and an item of the *sequence*. (And so on.)"
msgstr ""

#: ../../usage/quickstart.rst:179
msgid "The argument of the directive is the :dfn:`signature` of the object you describe, the content is the documentation for it.  Multiple signatures can be given, each in its own line."
msgstr ""

#: ../../usage/quickstart.rst:183
msgid "The Python domain also happens to be the default domain, so you don't need to prefix the markup with the domain name."
msgstr ""

#: ../../usage/quickstart.rst:192
msgid "does the same job if you keep the default setting for the default domain."
msgstr ""

#: ../../usage/quickstart.rst:194
msgid "There are several more directives for documenting other types of Python objects, for example :rst:dir:`py:class` or :rst:dir:`py:method`.  There is also a cross-referencing :dfn:`role` for each of these object types.  This markup will create a link to the documentation of ``enumerate()``."
msgstr ""

#: ../../usage/quickstart.rst:203
msgid "And here is the proof: A link to :func:`enumerate`."
msgstr ""

#: ../../usage/quickstart.rst:205
msgid "Again, the ``py:`` can be left out if the Python domain is the default one.  It doesn't matter which file contains the actual documentation for ``enumerate()``; Sphinx will find it and create a link to it."
msgstr ""

#: ../../usage/quickstart.rst:209
msgid "Each domain will have special rules for how the signatures can look like, and make the formatted output look pretty, or add specific features like links to parameter types, e.g. in the C/C++ domains."
msgstr ""

#: ../../usage/quickstart.rst:213
msgid "|more| See :doc:`/usage/restructuredtext/domains` for all the available domains and their directives/roles."
msgstr ""

#: ../../usage/quickstart.rst:218
msgid "Basic configuration"
msgstr ""

#: ../../usage/quickstart.rst:220
msgid "Earlier we mentioned that the :file:`conf.py` file controls how Sphinx processes your documents.  In that file, which is executed as a Python source file, you assign configuration values.  For advanced users: since it is executed by Sphinx, you can do non-trivial tasks in it, like extending :data:`sys.path` or importing a module to find out the version you are documenting."
msgstr ""

#: ../../usage/quickstart.rst:227
msgid "The config values that you probably want to change are already put into the :file:`conf.py` by :program:`sphinx-quickstart` and initially commented out (with standard Python syntax: a ``#`` comments the rest of the line).  To change the default value, remove the hash sign and modify the value.  To customize a config value that is not automatically added by :program:`sphinx-quickstart`, just add an additional assignment."
msgstr ""

#: ../../usage/quickstart.rst:234
msgid "Keep in mind that the file uses Python syntax for strings, numbers, lists and so on.  The file is saved in UTF-8 by default, as indicated by the encoding declaration in the first line.  If you use non-ASCII characters in any string value, you need to use Python Unicode strings (like ``project = u'Exposé'``)."
msgstr ""

#: ../../usage/quickstart.rst:239
msgid "|more| See :doc:`/usage/configuration` for documentation of all available config values."
msgstr ""

#: ../../usage/quickstart.rst:243
msgid "Move this entire doc to a different section"
msgstr ""

#: ../../usage/quickstart.rst:246
msgid "Autodoc"
msgstr ""

#: ../../usage/quickstart.rst:248
msgid "When documenting Python code, it is common to put a lot of documentation in the source files, in documentation strings.  Sphinx supports the inclusion of docstrings from your modules with an :dfn:`extension` (an extension is a Python module that provides additional features for Sphinx projects) called *autodoc*."
msgstr ""

#: ../../usage/quickstart.rst:253
msgid "In order to use *autodoc*, you need to activate it in :file:`conf.py` by putting the string ``'sphinx.ext.autodoc'`` into the list assigned to the :confval:`extensions` config value.  Then, you have a few additional directives at your disposal."
msgstr ""

#: ../../usage/quickstart.rst:258
msgid "For example, to document the function ``io.open()``, reading its signature and docstring from the source file, you'd write this::"
msgstr ""

#: ../../usage/quickstart.rst:263
msgid "You can also document whole classes or even modules automatically, using member options for the auto directives, like ::"
msgstr ""

#: ../../usage/quickstart.rst:269
msgid "*autodoc* needs to import your modules in order to extract the docstrings. Therefore, you must add the appropriate path to :py:data:`sys.path` in your :file:`conf.py`."
msgstr ""

#: ../../usage/quickstart.rst:275
msgid ":mod:`~sphinx.ext.autodoc` **imports** the modules to be documented.  If any modules have side effects on import, these will be executed by ``autodoc`` when ``sphinx-build`` is run."
msgstr ""

#: ../../usage/quickstart.rst:279
msgid "If you document scripts (as opposed to library modules), make sure their main routine is protected by a ``if __name__ == '__main__'`` condition."
msgstr ""

#: ../../usage/quickstart.rst:282
msgid "|more| See :mod:`sphinx.ext.autodoc` for the complete description of the features of autodoc."
msgstr ""

#: ../../usage/quickstart.rst:286
msgid "Move this doc to another section"
msgstr ""

#: ../../usage/quickstart.rst:289
msgid "Intersphinx"
msgstr ""

#: ../../usage/quickstart.rst:291
msgid "Many Sphinx documents including the `Python documentation`_ are published on the Internet.  When you want to make links to such documents from your documentation, you can do it with :mod:`sphinx.ext.intersphinx`."
msgstr ""

#: ../../usage/quickstart.rst:297
msgid "In order to use intersphinx, you need to activate it in :file:`conf.py` by putting the string ``'sphinx.ext.intersphinx'`` into the :confval:`extensions` list and set up the :confval:`intersphinx_mapping` config value."
msgstr ""

#: ../../usage/quickstart.rst:301
msgid "For example, to link to ``io.open()`` in the Python library manual, you need to setup your :confval:`intersphinx_mapping` like::"
msgstr ""

#: ../../usage/quickstart.rst:306
msgid "And now, you can write a cross-reference like ``:py:func:`io.open```.  Any cross-reference that has no matching target in the current documentation set, will be looked up in the documentation sets configured in :confval:`intersphinx_mapping` (this needs access to the URL in order to download the list of valid targets).  Intersphinx also works for some other :term:`domain`\\'s roles including ``:ref:``, however it doesn't work for ``:doc:`` as that is non-domain role."
msgstr ""

#: ../../usage/quickstart.rst:314
msgid "|more| See :mod:`sphinx.ext.intersphinx` for the complete description of the features of intersphinx."
msgstr ""

#: ../../usage/quickstart.rst:319
msgid "More topics to be covered"
msgstr ""

#: ../../usage/quickstart.rst:321
msgid ":doc:`Other extensions </usage/extensions/index>`:"
msgstr ""

#: ../../usage/quickstart.rst:322
msgid "Static files"
msgstr ""

#: ../../usage/quickstart.rst:323
msgid ":doc:`Selecting a theme </usage/theming>`"
msgstr ""

#: ../../usage/quickstart.rst:324
msgid ":doc:`/usage/advanced/setuptools`"
msgstr ""

#: ../../usage/quickstart.rst:325
msgid ":ref:`Templating <templating>`"
msgstr ""

#: ../../usage/quickstart.rst:326
msgid "Using extensions"
msgstr ""

#: ../../usage/quickstart.rst:327
msgid ":ref:`Writing extensions <dev-extensions>`"
msgstr ""

#: ../../usage/quickstart.rst:331
msgid "Footnotes"
msgstr ""

#: ../../usage/quickstart.rst:332
msgid "This is the usual layout.  However, :file:`conf.py` can also live in another directory, the :term:`configuration directory`.  Refer to the :doc:`sphinx-build man page </man/sphinx-build>` for more information."
msgstr ""

