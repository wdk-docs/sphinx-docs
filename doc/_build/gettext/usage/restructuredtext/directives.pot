# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2019, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 2.1.0+/41035e8f9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-08 16:18+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../usage/restructuredtext/directives.rst:5
msgid "Directives"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:7
msgid ":ref:`As previously discussed <rst-directives>`, a directive is a generic block of explicit markup. While Docutils provides a number of directives, Sphinx provides many more and uses directives as one of the primary extension mechanisms."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:12
msgid "See :doc:`/usage/restructuredtext/domains` for roles added by domains."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:16
msgid "Refer to the :ref:`reStructuredText Primer <rst-directives>` for an overview of the directives provided by Docutils."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:23
msgid "Table of contents"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:27
msgid "Since reST does not have facilities to interconnect several documents, or split documents into multiple output files, Sphinx uses a custom directive to add relations between the single files the documentation is made of, as well as tables of contents.  The ``toctree`` directive is the central element."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:34
msgid "Simple \"inclusion\" of one file in another can be done with the :dudir:`include` directive."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:39
msgid "For local tables of contents, use the standard reST :dudir:`contents directive <table-of-contents>`."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:44
msgid "This directive inserts a \"TOC tree\" at the current location, using the individual TOCs (including \"sub-TOC trees\") of the documents given in the directive body.  Relative document names (not beginning with a slash) are relative to the document the directive occurs in, absolute names are relative to the source directory.  A numeric ``maxdepth`` option may be given to indicate the depth of the tree; by default, all levels are included. [#]_"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:51
msgid "Consider this example (taken from the Python docs' library reference index)::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:62
msgid "This accomplishes two things:"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:64
msgid "Tables of contents from all those documents are inserted, with a maximum depth of two, that means one nested heading.  ``toctree`` directives in those documents are also taken into account."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:67
msgid "Sphinx knows the relative order of the documents ``intro``, ``strings`` and so forth, and it knows that they are children of the shown document, the library index.  From this information it generates \"next chapter\", \"previous chapter\" and \"parent chapter\" links."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:72
msgid "**Entries**"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:74
msgid "Document titles in the :rst:dir:`toctree` will be automatically read from the title of the referenced document. If that isn't what you want, you can specify an explicit title and target using a similar syntax to reST hyperlinks (and Sphinx's :ref:`cross-referencing syntax <xref-syntax>`). This looks like::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:86
msgid "The second line above will link to the ``strings`` document, but will use the title \"All about strings\" instead of the title of the ``strings`` document."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:89
msgid "You can also add external links, by giving an HTTP URL instead of a document name."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:92
msgid "**Section numbering**"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:94
msgid "If you want to have section numbers even in HTML output, give the **toplevel** toctree a ``numbered`` option.  For example::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:103
msgid "Numbering then starts at the heading of ``foo``.  Sub-toctrees are automatically numbered (don't give the ``numbered`` flag to those)."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:106
msgid "Numbering up to a specific depth is also possible, by giving the depth as a numeric argument to ``numbered``."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:109
#: ../../usage/restructuredtext/directives.rst:456
#: ../../usage/restructuredtext/directives.rst:480
#: ../../usage/restructuredtext/directives.rst:554
msgid "**Additional options**"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:111
msgid "You can use ``caption`` option to provide a toctree caption and you can use ``name`` option to provide implicit target name that can be referenced by using :rst:role:`ref`::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:121
msgid "If you want only the titles of documents in the tree to show up, not other headings of the same level, you can use the ``titlesonly`` option::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:130
msgid "You can use \"globbing\" in toctree directives, by giving the ``glob`` flag option.  All entries are then matched against the list of available documents, and matches are inserted into the list alphabetically.  Example::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:141
msgid "This includes first all documents whose names start with ``intro``, then all documents in the ``recipe`` folder, then all remaining documents (except the one containing the directive, of course.) [#]_"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:145
msgid "The special entry name ``self`` stands for the document containing the toctree directive.  This is useful if you want to generate a \"sitemap\" from the toctree."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:149
msgid "You can use the ``reversed`` flag option to reverse the order of the entries in the list. This can be useful when using the ``glob`` flag option to reverse the ordering of the files.  Example::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:159
msgid "You can also give a \"hidden\" option to the directive, like this::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:167
msgid "This will still notify Sphinx of the document hierarchy, but not insert links into the document at the location of the directive -- this makes sense if you intend to insert these links yourself, in a different style, or in the HTML sidebar."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:172
msgid "In cases where you want to have only one top-level toctree and hide all other lower level toctrees you can add the \"includehidden\" option to the top-level toctree entry::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:182
msgid "All other toctree entries can then be eliminated by the \"hidden\" option."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:184
msgid "In the end, all documents in the :term:`source directory` (or subdirectories) must occur in some ``toctree`` directive; Sphinx will emit a warning if it finds a file that is not included, because that means that this file will not be reachable through standard navigation."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:189
msgid "Use :confval:`exclude_patterns` to explicitly exclude documents or directories from building completely.  Use :ref:`the \"orphan\" metadata <metadata>` to let a document be built, but notify Sphinx that it is not reachable via a toctree."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:194
msgid "The \"master document\" (selected by :confval:`master_doc`) is the \"root\" of the TOC tree hierarchy.  It can be used as the documentation's main page, or as a \"full table of contents\" if you don't give a ``maxdepth`` option."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:198
msgid "Added \"globbing\" option."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:201
msgid "Added \"numbered\" and \"hidden\" options as well as external links and support for \"self\" references."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:205
msgid "Added \"titlesonly\" option."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:208
msgid "Added numeric argument to \"numbered\"."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:211
msgid "Added \"includehidden\" option."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:214
msgid "Added \"caption\" and \"name\" option."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:218
msgid "Special names"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:220
msgid "Sphinx reserves some document names for its own use; you should not try to create documents with these names -- it will cause problems."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:223
msgid "The special document names (and pages generated for them) are:"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:225
msgid "``genindex``, ``modindex``, ``search``"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:227
msgid "These are used for the general index, the Python module index, and the search page, respectively."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:230
msgid "The general index is populated with entries from modules, all index-generating :ref:`object descriptions <basic-domain-markup>`, and from :rst:dir:`index` directives."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:234
msgid "The Python module index contains one entry per :rst:dir:`py:module` directive."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:237
msgid "The search page contains a form that uses the generated JSON search index and JavaScript to full-text search the generated documents for search words; it should work on every major browser that supports modern JavaScript."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:241
msgid "every name beginning with ``_``"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:243
msgid "Though only few such names are currently used by Sphinx, you should not create documents or document-containing directories with such names.  (Using ``_`` as a prefix for a custom template directory is fine.)"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:249
msgid "Be careful with unusual characters in filenames.  Some formats may interpret these characters in unexpected ways:"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:252
msgid "Do not use the colon ``:`` for HTML based formats.  Links to other parts may not work."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:255
msgid "Do not use the plus ``+`` for the ePub format.  Some resources may not be found."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:260
msgid "Paragraph-level markup"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:265
msgid "These directives create short paragraphs and can be used inside information units as well as normal text."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:270
msgid "An especially important bit of information about an API that a user should be aware of when using whatever bit of API the note pertains to.  The content of the directive should be written in complete sentences and include all appropriate punctuation."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:275
#: ../../usage/restructuredtext/directives.rst:298
#: ../../usage/restructuredtext/directives.rst:448
#: ../../usage/restructuredtext/directives.rst:468
msgid "Example::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:283
msgid "An important bit of information about an API that a user should be very aware of when using whatever bit of API the warning pertains to.  The content of the directive should be written in complete sentences and include all appropriate punctuation. This differs from :rst:dir:`note` in that it is recommended over :rst:dir:`note` for information regarding security."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:291
msgid "This directive documents the version of the project which added the described feature to the library or C API. When this applies to an entire module, it should be placed at the top of the module section before any prose."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:295
msgid "The first argument must be given and is the version in question; you can add a second argument consisting of a *brief* explanation of the change."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:303
msgid "Note that there must be no blank line between the directive head and the explanation; this is to make these blocks visually continuous in the markup."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:308
msgid "Similar to :rst:dir:`versionadded`, but describes when and what changed in the named feature in some way (new parameters, changed side effects, etc.)."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:313
msgid "Similar to :rst:dir:`versionchanged`, but describes when the feature was deprecated.  An explanation can also be given, for example to inform the reader what should be used instead.  Example::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:322
msgid "Many sections include a list of references to module documentation or external documents.  These lists are created using the :rst:dir:`seealso` directive."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:326
msgid "The :rst:dir:`seealso` directive is typically placed in a section just before any subsections.  For the HTML output, it is shown boxed off from the main flow of the text."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:330
msgid "The content of the :rst:dir:`seealso` directive should be a reST definition list. Example::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:341
msgid "There's also a \"short form\" allowed that looks like this::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:345
msgid "The short form."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:350
msgid "This directive creates a paragraph heading that is not used to create a table of contents node."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:355
msgid "If the *title* of the rubric is \"Footnotes\" (or the selected language's equivalent), this rubric is ignored by the LaTeX writer, since it is assumed to only contain footnote definitions and therefore would create an empty heading."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:362
msgid "This directive creates a centered boldfaced line of text.  Use it as follows::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:367
msgid "This presentation-only directive is a legacy from older versions.  Use a :rst:dir:`rst-class` directive instead and add an appropriate style."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:373
msgid "This directive must contain a bullet list.  It will transform it into a more compact list by either distributing more than one item horizontally, or reducing spacing between items, depending on the builder."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:377
msgid "For builders that support the horizontal distribution, there is a ``columns`` option that specifies the number of columns; it defaults to 2.  Example::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:395
msgid "Showing code examples"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:400
msgid "There are multiple ways to show syntax-highlighted literal code blocks in Sphinx: using :ref:`reST doctest blocks <rst-doctest-blocks>`; using :ref:`reST literal blocks <rst-literal-blocks>`, optionally in combination with the :rst:dir:`highlight` directive; using the :rst:dir:`code-block` directive; and using the :rst:dir:`literalinclude` directive. Doctest blocks can only be used to show interactive Python sessions, while the remaining three can be used for other languages. Of these three, literal blocks are useful when an entire document, or at least large sections of it, use code blocks with the same syntax and which should be styled in the same manner. On the other hand, the :rst:dir:`code-block` directive makes more sense when you want more fine-tuned control over the styling of each block or when you have a document containing code blocks using multiple varied syntaxes. Finally, the :rst:dir:`literalinclude` directive is useful for including entire code files in your documentation."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:415
msgid "In all cases, Syntax highlighting is provided by `Pygments <http://pygments.org>`_. When using literal blocks, this is configured using any :rst:dir:`highlight` directives in the source file. When a ``highlight`` directive is encountered, it is used until the next ``highlight`` directive is encountered. If there is no ``highlight`` directive in the file, the global highlighting language is used. This defaults to ``python`` but can be configured using the :confval:`highlight_language` config value. The following values are supported:"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:424
msgid "``none`` (no highlighting)"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:425
msgid "``default`` (similar to ``python3`` but with a fallback to ``none`` without warning highlighting fails; the default when :confval:`highlight_language` isn't set)"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:428
msgid "``guess`` (let Pygments guess the lexer based on contents, only works with certain well-recognizable languages)"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:430
msgid "``python``"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:431
msgid "``rest``"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:432
msgid "``c``"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:433
msgid "... and any other `lexer alias that Pygments supports`__"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:435
msgid "If highlighting with the selected language fails (i.e. Pygments emits an \"Error\" token), the block is not highlighted in any way."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:440
msgid "The list of lexer aliases supported is tied to the Pygment version. If you want to ensure consistent highlighting, you should fix your version of Pygments."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:452
msgid "This language is used until the next ``highlight`` directive is encountered. As discussed previously, *language* can be any lexer alias supported by Pygments."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:458
msgid "Pygments can generate line numbers for code blocks.  To enable this, use the ``linenothreshold`` option. ::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:464
msgid "This will produce line numbers for all code blocks longer than five lines."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:474
msgid "The directive's alias name :rst:dir:`sourcecode` works as well.  This directive takes a language name as an argument.  It can be any lexer alias supported by Pygments.  If it is not given, the setting of :rst:dir:`highlight` directive will be used.  If not set, :confval:`highlight_language` will be used."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:482
msgid "Pygments can generate line numbers for code blocks. To enable this for, use the ``linenos`` flag option. ::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:490
msgid "The first line number can be selected with the ``lineno-start`` option.  If present, ``linenos`` flag is automatically activated::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:498
msgid "Additionally, an ``emphasize-lines`` option can be given to have Pygments emphasize particular lines::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:510
msgid "A ``caption`` option can be given to show that name before the code block. A ``name`` option can be provided implicit target name that can be referenced by using :rst:role:`ref`.  For example::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:520
msgid "A ``dedent`` option can be given to strip indentation characters from the code block. For example::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:528
msgid "The ``emphasize-lines`` option has been added."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:531
msgid "The ``lineno-start``, ``caption``, ``name`` and ``dedent`` options have been added."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:535
msgid "LaTeX supports the ``emphasize-lines`` option."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:538
msgid "The ``language`` argument becomes optional."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:543
msgid "Longer displays of verbatim text may be included by storing the example text in an external file containing only plain text.  The file may be included using the ``literalinclude`` directive. [#]_ For example, to include the Python source file :file:`example.py`, use::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:550
msgid "The file name is usually relative to the current file's path.  However, if it is absolute (starting with ``/``), it is relative to the top source directory."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:556
msgid "Like :rst:dir:`code-block`, the directive supports the ``linenos`` flag option to switch on line numbers, the ``lineno-start`` option to select the first line number, the ``emphasize-lines`` option to emphasize particular lines, the ``name`` option to provide an implicit target name, the ``dedent`` option to strip indentation characters for the code block, and a ``language`` option to select a language different from the current file's standard language. In addition, it supports the ``caption`` option; however, this can be provided with no argument to use the filename as the caption. Example with options::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:571
msgid "Tabs in the input are expanded if you give a ``tab-width`` option with the desired tab width."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:574
msgid "Include files are assumed to be encoded in the :confval:`source_encoding`. If the file has a different encoding, you can specify it with the ``encoding`` option::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:581
msgid "The directive also supports including only parts of the file.  If it is a Python module, you can select a class, function or method to include using the ``pyobject`` option::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:588
msgid "This would only include the code lines belonging to the ``start()`` method in the ``Timer`` class within the file."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:591
msgid "Alternately, you can specify exactly which lines to include by giving a ``lines`` option::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:597
msgid "This includes the lines 1, 3, 5 to 10 and lines 20 to the last line."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:599
msgid "Another way to control which part of the file is included is to use the ``start-after`` and ``end-before`` options (or only one of them).  If ``start-after`` is given as a string option, only lines that follow the first line containing that string are included.  If ``end-before`` is given as a string option, only lines that precede the first lines containing that string are included. The ``start-at`` and ``end-at`` options behave in a similar way, but the lines containing the matched string are included."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:607
msgid "With lines selected using ``start-after`` it is still possible to use ``lines``, the first allowed line having by convention the line number ``1``."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:611
msgid "When lines have been selected in any of the ways described above, the line numbers in ``emphasize-lines`` refer to those selected lines, counted consecutively starting at ``1``."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:615
msgid "When specifying particular parts of a file to display, it can be useful to display the original line numbers. This can be done using the ``lineno-match`` option, which is however allowed only when the selection consists of contiguous lines."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:620
msgid "You can prepend and/or append a line to the included code, using the ``prepend`` and ``append`` option, respectively.  This is useful e.g. for highlighting PHP code that doesn't include the ``<?php``/``?>`` markers."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:624
msgid "If you want to show the diff of the code, you can specify the old file by giving a ``diff`` option::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:630
msgid "This shows the diff between ``example.py`` and ``example.py.orig`` with unified diff format."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:633
msgid "Added the ``encoding`` option."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:636
msgid "Added the ``pyobject``, ``lines``, ``start-after`` and ``end-before`` options, as well as support for absolute filenames."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:640
msgid "Added the ``prepend``, ``append``, and ``tab-width`` options."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:643
msgid "Added the ``diff``, ``lineno-match``, ``caption``, ``name``, and ``dedent`` options."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:647
msgid "Added the ``start-at``, and ``end-at`` options."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:650
msgid "With both ``start-after`` and ``lines`` in use, the first line as per ``start-after`` is considered to be with line number ``1`` for ``lines``."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:657
msgid "Glossary"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:661
msgid "This directive must contain a reST definition-list-like markup with terms and definitions.  The definitions will then be referenceable with the :rst:role:`term` role.  Example::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:677
msgid "In contrast to regular definition lists, *multiple* terms per entry are allowed, and inline markup is allowed in terms.  You can link to all of the terms.  For example::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:687
msgid "(When the glossary is sorted, the first term determines the sort order.)"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:689
msgid "If you want to specify \"grouping key\" for general index entries, you can put a \"key\" as \"term : key\". For example::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:698
msgid "Note that \"key\" is used for grouping key as is. The \"key\" isn't normalized; key \"A\" and \"a\" become different groups. The whole characters in \"key\" is used instead of a first character; it is used for \"Combining Character Sequence\" and \"Surrogate Pairs\" grouping key."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:703
msgid "In i18n situation, you can specify \"localized term : key\" even if original text only have \"term\" part. In this case, translated \"localized term\" will be categorized in \"key\" group."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:707
msgid "You can now give the glossary directive a ``:sorted:`` flag that will automatically sort the entries alphabetically."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:711
msgid "Now supports multiple terms and inline markup in terms."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:714
msgid "Index key for glossary term should be considered *experimental*."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:719
msgid "Meta-information markup"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:723
msgid "Identifies the author of the current section.  The argument should include the author's name such that it can be used for presentation and email address.  The domain name portion of the address should be lower case. Example::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:730
msgid "By default, this markup isn't reflected in the output in any way (it helps keep track of contributions), but you can set the configuration value :confval:`show_authors` to ``True`` to make them produce a paragraph in the output."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:738
msgid "The :rst:dir:`codeauthor` directive, which can appear multiple times, names the authors of the described code, just like :rst:dir:`sectionauthor` names the author(s) of a piece of documentation.  It too only produces output if the :confval:`show_authors` configuration value is ``True``."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:745
msgid "Index-generating markup"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:747
msgid "Sphinx automatically creates index entries from all object descriptions (like functions, classes or attributes) like discussed in :doc:`/usage/restructuredtext/domains`."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:751
msgid "However, there is also explicit markup available, to make the index more comprehensive and enable index entries in documents where information is not mainly contained in information units, such as the language reference."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:757
msgid "This directive contains one or more index entries.  Each entry consists of a type and a value, separated by a colon."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:760
msgid "For example::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:773
msgid "This directive contains five entries, which will be converted to entries in the generated index which link to the exact location of the index statement (or, in case of offline media, the corresponding page number)."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:777
msgid "Since index directives generate cross-reference targets at their location in the source, it makes sense to put them *before* the thing they refer to -- e.g. a heading, as in the example above."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:781
msgid "The possible entry types are:"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:785
msgid "single"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:784
msgid "Creates a single index entry.  Can be made a subentry by separating the subentry text with a semicolon (this notation is also used below to describe what entries are created)."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:788
msgid "pair"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:788
msgid "``pair: loop; statement`` is a shortcut that creates two index entries, namely ``loop; statement`` and ``statement; loop``."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:792
msgid "triple"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:791
msgid "Likewise, ``triple: module; search; path`` is a shortcut that creates three index entries, which are ``module; search path``, ``search; path, module`` and ``path; module search``."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:795
msgid "see"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:795
msgid "``see: entry; other`` creates an index entry that refers from ``entry`` to ``other``."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:797
msgid "seealso"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:798
msgid "Like ``see``, but inserts \"see also\" instead of \"see\"."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:802
msgid "module, keyword, operator, object, exception, statement, builtin"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:800
msgid "These all create two index entries.  For example, ``module: hashlib`` creates the entries ``module; hashlib`` and ``hashlib; module``.  (These are Python-specific and therefore deprecated.)"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:804
msgid "You can mark up \"main\" index entries by prefixing them with an exclamation mark.  The references to \"main\" entries are emphasized in the generated index.  For example, if two pages contain ::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:810
msgid "and one page contains ::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:814
msgid "then the backlink to the latter page is emphasized among the three backlinks."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:816
msgid "For index directives containing only \"single\" entries, there is a shorthand notation::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:821
msgid "This creates four index entries."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:823
msgid "Added ``see`` and ``seealso`` types, as well as marking main entries."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:828
msgid "While the :rst:dir:`index` directive is a block-level markup and links to the beginning of the next paragraph, there is also a corresponding role that sets the link target directly where it is used."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:832
msgid "The content of the role can be a simple phrase, which is then kept in the text and used as an index entry.  It can also be a combination of text and index entry, styled like with explicit targets of cross-references.  In that case, the \"target\" part can be a full entry as described for the directive above.  For example::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:847
msgid "Including content based on tags"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:851
msgid "Include the content of the directive only if the *expression* is true.  The expression should consist of tags, like this::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:856
msgid "Undefined tags are false, defined tags (via the ``-t`` command-line option or within :file:`conf.py`, see :ref:`here <conf-tags>`) are true.  Boolean expressions, also using parentheses (like ``html and (latex or draft)``) are supported."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:861
msgid "The *format* and the *name* of the current builder (``html``, ``latex`` or ``text``) are always set as a tag [#]_.  To make the distinction between format and name explicit, they are also added with the prefix ``format_`` and ``builder_``, e.g. the epub builder defines the tags  ``html``, ``epub``, ``format_html`` and ``builder_epub``."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:867
msgid "These standard tags are set *after* the configuration file is read, so they are not available there."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:870
msgid "All tags must follow the standard Python identifier syntax as set out in the `Identifiers and keywords <https://docs.python.org/3/reference/lexical_analysis.html#identifiers>`_ documentation.  That is, a tag expression may only consist of tags that conform to the syntax of Python variables.  In ASCII, this consists of the uppercase and lowercase letters ``A`` through ``Z``, the underscore ``_`` and, except for the first character, the digits ``0`` through ``9``."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:879
msgid "Added the name of the builder and the prefixes."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:884
msgid "This directive is designed to control only content of document.  It could not control sections, labels and so on."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:890
msgid "Tables"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:892
msgid "Use :ref:`reStructuredText tables <rst-tables>`, i.e. either"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:894
msgid "grid table syntax (:duref:`ref <grid-tables>`),"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:895
msgid "simple table syntax (:duref:`ref <simple-tables>`),"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:896
msgid ":dudir:`csv-table` syntax,"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:897
msgid "or :dudir:`list-table` syntax."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:899
msgid "The :dudir:`table` directive serves as optional wrapper of the *grid* and *simple* syntaxes."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:902
msgid "They work fine in HTML output, however there are some gotchas when using tables in LaTeX: the column width is hard to determine correctly automatically.  For this reason, the following directive exists:"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:908
msgid "This directive gives a \"column spec\" for the next table occurring in the source file.  The spec is the second argument to the LaTeX ``tabulary`` package's environment (which Sphinx uses to translate tables).  It can have values like ::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:915
msgid "which means three left-adjusted, nonbreaking columns.  For columns with longer text that should automatically be broken, use either the standard ``p{width}`` construct, or tabulary's automatic specifiers:"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:920
msgid "``L``"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:920
msgid "flush left column with automatic width"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:922
msgid "``R``"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:922
msgid "flush right column with automatic width"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:924
msgid "``C``"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:924
msgid "centered column with automatic width"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:926
msgid "``J``"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:926
msgid "justified column with automatic width"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:929
msgid "The automatic widths of the ``LRCJ`` columns are attributed by ``tabulary`` in proportion to the observed shares in a first pass where the table cells are rendered at their natural \"horizontal\" widths."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:933
msgid "By default, Sphinx uses a table layout with ``J`` for every column."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:937
msgid "Merged cells may now contain multiple paragraphs and are much better handled, thanks to custom Sphinx LaTeX macros. This novel situation motivated the switch to ``J`` specifier and not ``L`` by default."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:944
msgid "Sphinx actually uses ``T`` specifier having done ``\\newcolumntype{T}{J}``. To revert to previous default, insert ``\\newcolumntype{T}{L}`` in the LaTeX preamble (see :confval:`latex_elements`)."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:948
msgid "A frequent issue with tabulary is that columns with little contents are \"squeezed\". The minimal column width is a tabulary parameter called ``\\tymin``. You may set it globally in the LaTeX preamble via ``\\setlength{\\tymin}{40pt}`` for example."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:953
msgid "Else, use the :rst:dir:`tabularcolumns` directive with an explicit ``p{40pt}`` (for example) for that column. You may use also ``l`` specifier but this makes the task of setting column widths more difficult if some merged cell intersects that column."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:960
msgid "Tables with more than 30 rows are rendered using ``longtable``, not ``tabulary``, in order to allow pagebreaks. The ``L``, ``R``, ... specifiers do not work for these tables."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:964
msgid "Tables that contain list-like elements such as object descriptions, blockquotes or any kind of lists cannot be set out of the box with ``tabulary``. They are therefore set with the standard LaTeX ``tabular`` (or ``longtable``) environment if you don't give a ``tabularcolumns`` directive. If you do, the table will be set with ``tabulary`` but you must use the ``p{width}`` construct (or Sphinx's ``\\X`` and ``\\Y`` specifiers described below) for the columns containing these elements."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:972
msgid "Literal blocks do not work with ``tabulary`` at all, so tables containing a literal block are always set with ``tabular``. The verbatim environment used for literal blocks only works in ``p{width}`` (and ``\\X`` or ``\\Y``) columns, hence Sphinx generates such column specs for tables containing literal blocks."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:978
msgid "Since Sphinx 1.5, the ``\\X{a}{b}`` specifier is used (there *is* a backslash in the specifier letter). It is like ``p{width}`` with the width set to a fraction ``a/b`` of the current line width. You can use it in the :rst:dir:`tabularcolumns` (it is not a problem if some LaTeX macro is also called ``\\X``.)"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:984
msgid "It is *not* needed for ``b`` to be the total number of columns, nor for the sum of the fractions of the ``\\X`` specifiers to add  up to one. For example ``|\\X{2}{5}|\\X{1}{5}|\\X{1}{5}|`` is legitimate and the table will occupy 80% of the line width, the first of its three columns having the same width as the sum  of the next two."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:990
msgid "This is used by the ``:widths:`` option of the :dudir:`table` directive."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:992
msgid "Since Sphinx 1.6, there is also the ``\\Y{f}`` specifier which admits a decimal argument, such has ``\\Y{0.15}``: this would have the same effect as ``\\X{3}{20}``."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:998
msgid "Merged cells from complex grid tables (either multi-row, multi-column, or both) now allow blockquotes, lists, literal blocks, ... as do regular cells."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1001
msgid "Sphinx's merged cells interact well with ``p{width}``, ``\\X{a}{b}``, ``Y{f}`` and tabulary's columns."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1006
msgid ":rst:dir:`tabularcolumns` conflicts with ``:widths:`` option of table directives.  If both are specified, ``:widths:`` option will be ignored."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1011
msgid "Math"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1013
msgid "The input language for mathematics is LaTeX markup.  This is the de-facto standard for plain-text math notation and has the added advantage that no further translation is necessary when building LaTeX output."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1017
msgid "Keep in mind that when you put math markup in **Python docstrings** read by :mod:`autodoc <sphinx.ext.autodoc>`, you either have to double all backslashes, or use Python raw strings (``r\"raw\"``)."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1023
msgid "Directive for displayed math (math that takes the whole line for itself)."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1025
msgid "The directive supports multiple equations, which should be separated by a blank line::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1034
msgid "In addition, each single equation is set within a ``split`` environment, which means that you can have multiple aligned lines in an equation, aligned at ``&`` and separated by ``\\\\``::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1043
msgid "For more details, look into the documentation of the `AmSMath LaTeX package`_."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1046
msgid "When the math is only one line of text, it can also be given as a directive argument::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1051
msgid "Normally, equations are not numbered.  If you want your equation to get a number, use the ``label`` option.  When given, it selects an internal label for the equation, by which it can be cross-referenced, and causes an equation number to be issued.  See :rst:role:`eq` for an example.  The numbering style depends on the output format."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1057
msgid "There is also an option ``nowrap`` that prevents any wrapping of the given math in a math environment.  When you give this option, you must make sure yourself that the math is properly set up.  For example::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1074
msgid ":ref:`math-support`"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1074
msgid "Rendering options for math with HTML builders."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1077
msgid ":confval:`latex_engine`"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1077
msgid "Explains how to configure LaTeX builder to support Unicode literals in math mark-up."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1082
msgid "Grammar production displays"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1084
msgid "Special markup is available for displaying the productions of a formal grammar. The markup is simple and does not attempt to model all aspects of BNF (or any derived forms), but provides enough to allow context-free grammars to be displayed in a way that causes uses of a symbol to be rendered as hyperlinks to the definition of the symbol.  There is this directive:"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1092
msgid "This directive is used to enclose a group of productions.  Each production is given on a single line and consists of a name, separated by a colon from the following definition.  If the definition spans multiple lines, each continuation line must begin with a colon placed at the same column as in the first line."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1098
msgid "The argument to :rst:dir:`productionlist` serves to distinguish different sets of production lists that belong to different grammars."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1101
msgid "Blank lines are not allowed within ``productionlist`` directive arguments."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1103
msgid "The definition can contain token names which are marked as interpreted text (e.g. ``sum ::= `integer` \"+\" `integer```) -- this generates cross-references to the productions of these tokens.  Outside of the production list, you can reference to token productions using :rst:role:`token`."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1109
msgid "Note that no further reST parsing is done in the production, so that you don't have to escape ``*`` or ``|`` characters."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1112
msgid "The following is an example taken from the Python Reference Manual::"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1125
msgid "Footnotes"
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1126
msgid "The LaTeX writer only refers the ``maxdepth`` option of first toctree directive in the document."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1129
msgid "A note on available globbing syntax: you can use the standard shell constructs ``*``, ``?``, ``[...]`` and ``[!...]`` with the feature that these all don't match slashes.  A double star ``**`` can be used to match any sequence of characters *including* slashes."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1134
msgid "There is a standard ``.. include`` directive, but it raises errors if the file is not found.  This one only emits a warning."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1137
msgid "For most builders name and format are the same. At the moment only builders derived from the html builder distinguish between the builder format and the builder name."
msgstr ""

#: ../../usage/restructuredtext/directives.rst:1141
msgid "Note that the current builder tag is not available in ``conf.py``, it is only available after the builder is initialized."
msgstr ""

