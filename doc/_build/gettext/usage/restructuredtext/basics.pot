# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2019, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 2.1.0+/89df177\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-03-30 00:15+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../usage/restructuredtext/basics.rst:7
msgid "reStructuredText Primer"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:9
msgid "reStructuredText is the default plaintext markup language used by Sphinx.  This section is a brief introduction to reStructuredText (reST) concepts and syntax, intended to provide authors with enough information to author documents productively.  Since reST was designed to be a simple, unobtrusive markup language, this will not take too long."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:17
msgid "The authoritative `reStructuredText User Documentation <http://docutils.sourceforge.net/rst.html>`_.  The \"ref\" links in this document link to the description of the individual constructs in the reST reference."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:24
msgid "Paragraphs"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:26
msgid "The paragraph (:duref:`ref <paragraphs>`) is the most basic block in a reST document.  Paragraphs are simply chunks of text separated by one or more blank lines.  As in Python, indentation is significant in reST, so all lines of the same paragraph must be left-aligned to the same level of indentation."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:35
msgid "Inline markup"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:37
msgid "The standard reST inline markup is quite simple: use"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:39
msgid "one asterisk: ``*text*`` for emphasis (italics),"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:40
msgid "two asterisks: ``**text**`` for strong emphasis (boldface), and"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:41
msgid "backquotes: ````text```` for code samples."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:43
msgid "If asterisks or backquotes appear in running text and could be confused with inline markup delimiters, they have to be escaped with a backslash."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:46
msgid "Be aware of some restrictions of this markup:"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:48
msgid "it may not be nested,"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:49
msgid "content may not start or end with whitespace: ``* text*`` is wrong,"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:50
msgid "it must be separated from surrounding text by non-word characters.  Use a backslash escaped space to work around that: ``thisis\\ *one*\\ word``."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:53
msgid "These restrictions may be lifted in future versions of the docutils."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:55
msgid "It is also possible to replace or expand upon some of this inline markup with roles. Refer to :ref:`rst-roles-alt` for more information."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:60
msgid "Lists and Quote-like blocks"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:62
msgid "List markup (:duref:`ref <bullet-lists>`) is natural: just place an asterisk at the start of a paragraph and indent properly.  The same goes for numbered lists; they can also be autonumbered using a ``#`` sign::"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:76
msgid "Nested lists are possible, but be aware that they must be separated from the parent list items by blank lines::"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:87
msgid "Definition lists (:duref:`ref <definition-lists>`) are created as follows::"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:97
msgid "Note that the term cannot have more than one line of text."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:99
msgid "Quoted paragraphs (:duref:`ref <block-quotes>`) are created by just indenting them more than the surrounding paragraphs."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:102
msgid "Line blocks (:duref:`ref <line-blocks>`) are a way of preserving line breaks::"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:108
msgid "There are also several more special blocks available:"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:110
msgid "field lists (:duref:`ref <field-lists>`, with caveats noted in :ref:`rst-field-lists`)"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:112
msgid "option lists (:duref:`ref <option-lists>`)"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:113
msgid "quoted literal blocks (:duref:`ref <quoted-literal-blocks>`)"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:114
msgid "doctest blocks (:duref:`ref <doctest-blocks>`)"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:120
msgid "Literal blocks"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:122
msgid "Literal code blocks (:duref:`ref <literal-blocks>`) are introduced by ending a paragraph with the special marker ``::``.  The literal block must be indented (and, like all paragraphs, separated from the surrounding ones by blank lines)::"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:136
msgid "The handling of the ``::`` marker is smart:"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:138
msgid "If it occurs as a paragraph of its own, that paragraph is completely left out of the document."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:140
msgid "If it is preceded by whitespace, the marker is removed."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:141
msgid "If it is preceded by non-whitespace, the marker is replaced by a single colon."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:144
msgid "That way, the second sentence in the above example's first paragraph would be rendered as \"The next paragraph is a code sample:\"."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:147
msgid "Code highlighting can be enabled for these literal blocks on a document-wide basis using the :rst:dir:`highlight` directive and on a project-wide basis using the :confval:`highlight_language` configuration option. The :rst:dir:`code-block` directive can be used to set highlighting on a block-by-block basis. These directives are discussed later."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:157
msgid "Doctest blocks"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:159
msgid "Doctest blocks (:duref:`ref <doctest-blocks>`) are interactive Python sessions cut-and-pasted into docstrings. They do not require the :ref:`literal blocks <rst-literal-blocks>` syntax. The doctest block must end with a blank line and should *not* end with with an unused prompt::"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:170
msgid "Tables"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:172
msgid "For *grid tables* (:duref:`ref <grid-tables>`), you have to \"paint\" the cell grid yourself.  They look like this::"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:184
msgid "*Simple tables* (:duref:`ref <simple-tables>`) are easier to write, but limited: they must contain more than one row, and the first column cells cannot contain multiple lines.  They look like this::"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:197
msgid "Two more syntaxes are supported: *CSV tables* and *List tables*. They use an *explicit markup block*. Refer to :ref:`table-directives` for more information."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:202
msgid "Hyperlinks"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:205
msgid "External links"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:207
msgid "Use ```Link text <https://domain.invalid/>`_`` for inline web links.  If the link text should be the web address, you don't need special markup at all, the parser finds links and mail addresses in ordinary text."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:211
msgid "There must be a space between the link text and the opening \\< for the URL."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:213
msgid "You can also separate the link and the target definition (:duref:`ref <hyperlink-targets>`), like this::"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:221
msgid "Internal links"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:223
msgid "Internal linking is done via a special reST role provided by Sphinx, see the section on specific markup, :ref:`ref-role`."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:228
msgid "Sections"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:230
msgid "Section headers (:duref:`ref <sections>`) are created by underlining (and optionally overlining) the section title with a punctuation character, at least as long as the text::"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:238
msgid "Normally, there are no heading levels assigned to certain characters as the structure is determined from the succession of headings.  However, this convention is used in `Python's Style Guide for documenting <https://docs.python.org/devguide/documenting.html#style-guide>`_ which you may follow:"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:244
msgid "``#`` with overline, for parts"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:245
msgid "``*`` with overline, for chapters"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:246
msgid "``=``, for sections"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:247
msgid "``-``, for subsections"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:248
msgid "``^``, for subsubsections"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:249
msgid "``\"``, for paragraphs"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:251
msgid "Of course, you are free to use your own marker characters (see the reST documentation), and use a deeper nesting level, but keep in mind that most target formats (HTML, LaTeX) have a limited supported nesting depth."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:259
msgid "Field Lists"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:261
msgid "Field lists (:duref:`ref <field-lists>`) are sequences of fields marked up like this::"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:266
msgid "They are commonly used in Python documentation::"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:277
msgid "Sphinx extends standard docutils behavior and intercepts field lists specified at the beginning of documents.  Refer to :doc:`field-lists` for more information."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:288
msgid "Roles"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:290
msgid "A role or \"custom interpreted text role\" (:duref:`ref <roles>`) is an inline piece of explicit markup. It signifies that that the enclosed text should be interpreted in a specific way.  Sphinx uses this to provide semantic markup and cross-referencing of identifiers, as described in the appropriate section.  The general syntax is ``:rolename:`content```."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:296
msgid "Docutils supports the following roles:"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:298
msgid ":durole:`emphasis` -- equivalent of ``*emphasis*``"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:299
msgid ":durole:`strong` -- equivalent of ``**strong**``"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:300
msgid ":durole:`literal` -- equivalent of ````literal````"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:301
msgid ":durole:`subscript` -- subscript text"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:302
msgid ":durole:`superscript` -- superscript text"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:303
msgid ":durole:`title-reference` -- for titles of books, periodicals, and other materials"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:306
msgid "Refer to :doc:`roles` for roles added by Sphinx."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:310
msgid "Explicit Markup"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:312
msgid "\"Explicit markup\" (:duref:`ref <explicit-markup-blocks>`) is used in reST for most constructs that need special handling, such as footnotes, specially-highlighted paragraphs, comments, and generic directives."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:316
msgid "An explicit markup block begins with a line starting with ``..`` followed by whitespace and is terminated by the next paragraph at the same level of indentation.  (There needs to be a blank line between explicit markup and normal paragraphs.  This may all sound a bit complicated, but it is intuitive enough when you write it.)"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:326
msgid "Directives"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:328
msgid "A directive (:duref:`ref <directives>`) is a generic block of explicit markup. Along with roles, it is one of the extension mechanisms of reST, and Sphinx makes heavy use of it."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:332
msgid "Docutils supports the following directives:"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:334
msgid "Admonitions: :dudir:`attention`, :dudir:`caution`, :dudir:`danger`, :dudir:`error`, :dudir:`hint`, :dudir:`important`, :dudir:`note`, :dudir:`tip`, :dudir:`warning` and the generic :dudir:`admonition <admonitions>`.  (Most themes style only \"note\" and \"warning\" specially.)"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:340
msgid "Images:"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:342
msgid ":dudir:`image` (see also Images_ below)"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:343
msgid ":dudir:`figure` (an image with caption and optional legend)"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:345
msgid "Additional body elements:"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:347
msgid ":dudir:`contents <table-of-contents>` (a local, i.e. for the current file only, table of contents)"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:349
msgid ":dudir:`container` (a container with a custom class, useful to generate an outer ``<div>`` in HTML)"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:351
msgid ":dudir:`rubric` (a heading without relation to the document sectioning)"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:352
msgid ":dudir:`topic`, :dudir:`sidebar` (special highlighted body elements)"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:353
msgid ":dudir:`parsed-literal` (literal block that supports inline markup)"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:354
msgid ":dudir:`epigraph` (a block quote with optional attribution line)"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:355
msgid ":dudir:`highlights`, :dudir:`pull-quote` (block quotes with their own class attribute)"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:357
msgid ":dudir:`compound <compound-paragraph>` (a compound paragraph)"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:359
msgid "Special tables:"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:361
msgid ":dudir:`table` (a table with title)"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:362
msgid ":dudir:`csv-table` (a table generated from comma-separated values)"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:363
msgid ":dudir:`list-table` (a table generated from a list of lists)"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:365
msgid "Special directives:"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:367
msgid ":dudir:`raw <raw-data-pass-through>` (include raw target-format markup)"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:368
msgid ":dudir:`include` (include reStructuredText from another file) -- in Sphinx, when given an absolute include file path, this directive takes it as relative to the source directory"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:371
msgid ":dudir:`class` (assign a class attribute to the next element) [1]_"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:373
msgid "HTML specifics:"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:375
msgid ":dudir:`meta` (generation of HTML ``<meta>`` tags)"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:376
msgid ":dudir:`title <metadata-document-title>` (override document title)"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:378
msgid "Influencing markup:"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:380
msgid ":dudir:`default-role` (set a new default role)"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:381
msgid ":dudir:`role` (create a new role)"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:383
msgid "Since these are only per-file, better use Sphinx's facilities for setting the :confval:`default_role`."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:388
msgid "Do *not* use the directives :dudir:`sectnum`, :dudir:`header` and :dudir:`footer`."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:391
msgid "Directives added by Sphinx are described in :doc:`directives`."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:393
msgid "Basically, a directive consists of a name, arguments, options and content. (Keep this terminology in mind, it is used in the next chapter describing custom directives.)  Looking at this example, ::"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:403
msgid "``function`` is the directive name.  It is given two arguments here, the remainder of the first line and the second line, as well as one option ``module`` (as you can see, options are given in the lines immediately following the arguments and indicated by the colons).  Options must be indented to the same level as the directive content."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:409
msgid "The directive content follows after a blank line and is indented relative to the directive start."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:414
msgid "Images"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:416
msgid "reST supports an image directive (:dudir:`ref <image>`), used like so::"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:421
msgid "When used within Sphinx, the file name given (here ``gnu.png``) must either be relative to the source file, or absolute which means that they are relative to the top source directory.  For example, the file ``sketch/spam.rst`` could refer to the image ``images/spam.png`` as ``../images/spam.png`` or ``/images/spam.png``."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:427
msgid "Sphinx will automatically copy image files over to a subdirectory of the output directory on building (e.g. the ``_static`` directory for HTML output.)"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:430
msgid "Interpretation of image size options (``width`` and ``height``) is as follows: if the size has no unit or the unit is pixels, the given size will only be respected for output channels that support pixels. Other units (like ``pt`` for points) will be used for HTML and LaTeX output (the latter replaces ``pt`` by ``bp`` as this is the TeX unit such that ``72bp=1in``)."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:436
msgid "Sphinx extends the standard docutils behavior by allowing an asterisk for the extension::"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:441
msgid "Sphinx then searches for all images matching the provided pattern and determines their type.  Each builder then chooses the best image out of these candidates.  For instance, if the file name ``gnu.*`` was given and two files :file:`gnu.pdf` and :file:`gnu.png` existed in the source tree, the LaTeX builder would choose the former, while the HTML builder would prefer the latter.  Supported image types and choosing priority are defined at :doc:`/usage/builders/index`."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:449
msgid "Note that image file names should not contain spaces."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:451
msgid "Added the support for file names ending in an asterisk."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:454
msgid "Image paths can now be absolute."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:457
msgid "latex target supports pixels (default is ``96px=1in``)."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:462
#: ../../usage/restructuredtext/basics.rst:565
msgid "Footnotes"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:464
msgid "For footnotes (:duref:`ref <footnotes>`), use ``[#name]_`` to mark the footnote location, and add the footnote body at the bottom of the document after a \"Footnotes\" rubric heading, like so::"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:475
msgid "You can also explicitly number the footnotes (``[1]_``) or use auto-numbered footnotes without names (``[#]_``)."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:480
msgid "Citations"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:482
msgid "Standard reST citations (:duref:`ref <citations>`) are supported, with the additional feature that they are \"global\", i.e. all citations can be referenced from all files.  Use them like so::"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:490
msgid "Citation usage is similar to footnote usage, but with a label that is not numeric or begins with ``#``."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:495
msgid "Substitutions"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:497
msgid "reST supports \"substitutions\" (:duref:`ref <substitution-definitions>`), which are pieces of text and/or markup referred to in the text by ``|name|``.  They are defined like footnotes with explicit markup blocks, like this::"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:503
msgid "or this::"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:508
msgid "See the :duref:`reST reference for substitutions <substitution-definitions>` for details."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:513
msgid "If you want to use some substitutions for all documents, put them into :confval:`rst_prolog` or :confval:`rst_epilog` or put them into a separate file and include it into all documents you want to use them in, using the :rst:dir:`include` directive.  (Be sure to give the include file a file name extension differing from that of other source files, to avoid Sphinx finding it as a standalone document.)"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:520
msgid "Sphinx defines some default substitutions, see :ref:`default-substitutions`."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:524
msgid "Comments"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:526
msgid "Every explicit markup block which isn't a valid markup construct (like the footnotes above) is regarded as a comment (:duref:`ref <comments>`).  For example::"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:532
msgid "You can indent text after a comment start to form multiline comments::"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:542
msgid "Source encoding"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:544
msgid "Since the easiest way to include special characters like em dashes or copyright signs in reST is to directly write them as Unicode characters, one has to specify an encoding.  Sphinx assumes source files to be encoded in UTF-8 by default; you can change this with the :confval:`source_encoding` config value."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:551
msgid "Gotchas"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:553
msgid "There are some problems one commonly runs into while authoring reST documents:"
msgstr ""

#: ../../usage/restructuredtext/basics.rst:555
msgid "**Separation of inline markup:** As said above, inline markup spans must be separated from the surrounding text by non-word characters, you have to use a backslash-escaped space to get around that.  See :duref:`the reference <substitution-definitions>` for the details."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:560
msgid "**No nested inline markup:** Something like ``*see :func:`foo`*`` is not possible."
msgstr ""

#: ../../usage/restructuredtext/basics.rst:566
msgid "When the default domain contains a :rst:dir:`class` directive, this directive will be shadowed.  Therefore, Sphinx re-exports it as :rst:dir:`rst-class`."
msgstr ""

