# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2007-2019, Georg Brandl and the Sphinx team
# This file is distributed under the same license as the Sphinx package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sphinx 2.1.0+/41035e8f9\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-04-08 16:18+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../usage/extensions/napoleon.rst:2
msgid ":mod:`sphinx.ext.napoleon` -- Support for NumPy and Google style docstrings"
msgstr ""

#: ../../usage/extensions/napoleon.rst:12
msgid "Overview"
msgstr ""

#: ../../usage/extensions/napoleon.rst:16
msgid "Are you tired of writing docstrings that look like this::"
msgstr ""

#: ../../usage/extensions/napoleon.rst:28
msgid "`reStructuredText`_ is great, but it creates visually dense, hard to read `docstrings`_. Compare the jumble above to the same thing rewritten according to the `Google Python Style Guide`_::"
msgstr ""

#: ../../usage/extensions/napoleon.rst:41
msgid "Much more legible, no?"
msgstr ""

#: ../../usage/extensions/napoleon.rst:43
msgid "Napoleon is a :term:`extension` that enables Sphinx to parse both `NumPy`_ and `Google`_ style docstrings - the style recommended by `Khan Academy`_."
msgstr ""

#: ../../usage/extensions/napoleon.rst:46
msgid "Napoleon is a pre-processor that parses `NumPy`_ and `Google`_ style docstrings and converts them to reStructuredText before Sphinx attempts to parse them. This happens in an intermediate step while Sphinx is processing the documentation, so it doesn't modify any of the docstrings in your actual source code files."
msgstr ""

#: ../../usage/extensions/napoleon.rst:64
msgid "Getting Started"
msgstr ""

#: ../../usage/extensions/napoleon.rst:66
msgid "After :doc:`setting up Sphinx </usage/quickstart>` to build your docs, enable napoleon in the Sphinx `conf.py` file::"
msgstr ""

#: ../../usage/extensions/napoleon.rst:74
msgid "Use `sphinx-apidoc` to build your API documentation::"
msgstr ""

#: ../../usage/extensions/napoleon.rst:80
msgid "Docstrings"
msgstr ""

#: ../../usage/extensions/napoleon.rst:82
msgid "Napoleon interprets every docstring that :mod:`autodoc <sphinx.ext.autodoc>` can find, including docstrings on: ``modules``, ``classes``, ``attributes``, ``methods``, ``functions``, and ``variables``. Inside each docstring, specially formatted `Sections`_ are parsed and converted to reStructuredText."
msgstr ""

#: ../../usage/extensions/napoleon.rst:88
msgid "All standard reStructuredText formatting still works as expected."
msgstr ""

#: ../../usage/extensions/napoleon.rst:94
msgid "Docstring Sections"
msgstr ""

#: ../../usage/extensions/napoleon.rst:96
msgid "All of the following section headers are supported:"
msgstr ""

#: ../../usage/extensions/napoleon.rst:98
msgid "``Args`` *(alias of Parameters)*"
msgstr ""

#: ../../usage/extensions/napoleon.rst:99
msgid "``Arguments`` *(alias of Parameters)*"
msgstr ""

#: ../../usage/extensions/napoleon.rst:100
msgid "``Attention``"
msgstr ""

#: ../../usage/extensions/napoleon.rst:101
msgid "``Attributes``"
msgstr ""

#: ../../usage/extensions/napoleon.rst:102
msgid "``Caution``"
msgstr ""

#: ../../usage/extensions/napoleon.rst:103
msgid "``Danger``"
msgstr ""

#: ../../usage/extensions/napoleon.rst:104
msgid "``Error``"
msgstr ""

#: ../../usage/extensions/napoleon.rst:105
msgid "``Example``"
msgstr ""

#: ../../usage/extensions/napoleon.rst:106
msgid "``Examples``"
msgstr ""

#: ../../usage/extensions/napoleon.rst:107
msgid "``Hint``"
msgstr ""

#: ../../usage/extensions/napoleon.rst:108
msgid "``Important``"
msgstr ""

#: ../../usage/extensions/napoleon.rst:109
msgid "``Keyword Args`` *(alias of Keyword Arguments)*"
msgstr ""

#: ../../usage/extensions/napoleon.rst:110
msgid "``Keyword Arguments``"
msgstr ""

#: ../../usage/extensions/napoleon.rst:111
msgid "``Methods``"
msgstr ""

#: ../../usage/extensions/napoleon.rst:112
msgid "``Note``"
msgstr ""

#: ../../usage/extensions/napoleon.rst:113
msgid "``Notes``"
msgstr ""

#: ../../usage/extensions/napoleon.rst:114
msgid "``Other Parameters``"
msgstr ""

#: ../../usage/extensions/napoleon.rst:115
msgid "``Parameters``"
msgstr ""

#: ../../usage/extensions/napoleon.rst:116
msgid "``Return`` *(alias of Returns)*"
msgstr ""

#: ../../usage/extensions/napoleon.rst:117
msgid "``Returns``"
msgstr ""

#: ../../usage/extensions/napoleon.rst:118
msgid "``Raises``"
msgstr ""

#: ../../usage/extensions/napoleon.rst:119
msgid "``References``"
msgstr ""

#: ../../usage/extensions/napoleon.rst:120
msgid "``See Also``"
msgstr ""

#: ../../usage/extensions/napoleon.rst:121
msgid "``Tip``"
msgstr ""

#: ../../usage/extensions/napoleon.rst:122
msgid "``Todo``"
msgstr ""

#: ../../usage/extensions/napoleon.rst:123
msgid "``Warning``"
msgstr ""

#: ../../usage/extensions/napoleon.rst:124
msgid "``Warnings`` *(alias of Warning)*"
msgstr ""

#: ../../usage/extensions/napoleon.rst:125
msgid "``Warns``"
msgstr ""

#: ../../usage/extensions/napoleon.rst:126
msgid "``Yield`` *(alias of Yields)*"
msgstr ""

#: ../../usage/extensions/napoleon.rst:127
msgid "``Yields``"
msgstr ""

#: ../../usage/extensions/napoleon.rst:130
msgid "Google vs NumPy"
msgstr ""

#: ../../usage/extensions/napoleon.rst:132
msgid "Napoleon supports two styles of docstrings: `Google`_ and `NumPy`_. The main difference between the two styles is that Google uses indentation to separate sections, whereas NumPy uses underlines."
msgstr ""

#: ../../usage/extensions/napoleon.rst:136
msgid "Google style:"
msgstr ""

#: ../../usage/extensions/napoleon.rst:155
msgid "NumPy style:"
msgstr ""

#: ../../usage/extensions/napoleon.rst:179
msgid "NumPy style tends to require more vertical space, whereas Google style tends to use more horizontal space. Google style tends to be easier to read for short and simple docstrings, whereas NumPy style tends be easier to read for long and in-depth docstrings."
msgstr ""

#: ../../usage/extensions/napoleon.rst:184
msgid "The `Khan Academy`_ recommends using Google style."
msgstr ""

#: ../../usage/extensions/napoleon.rst:186
msgid "The choice between styles is largely aesthetic, but the two styles should not be mixed. Choose one style for your project and be consistent with it."
msgstr ""

#: ../../usage/extensions/napoleon.rst:191
msgid "For complete examples:"
msgstr ""

#: ../../usage/extensions/napoleon.rst:193
msgid ":ref:`example_google`"
msgstr ""

#: ../../usage/extensions/napoleon.rst:194
msgid ":ref:`example_numpy`"
msgstr ""

#: ../../usage/extensions/napoleon.rst:198
msgid "Type Annotations"
msgstr ""

#: ../../usage/extensions/napoleon.rst:200
msgid "`PEP 484`_ introduced a standard way to express types in Python code. This is an alternative to expressing types directly in docstrings. One benefit of expressing types according to `PEP 484`_ is that type checkers and IDEs can take advantage of them for static code analysis."
msgstr ""

#: ../../usage/extensions/napoleon.rst:206
msgid "Google style with Python 3 type annotations::"
msgstr ""

#: ../../usage/extensions/napoleon.rst:223
msgid "Google style with types in docstrings::"
msgstr ""

#: ../../usage/extensions/napoleon.rst:241
msgid "`Python 2/3 compatible annotations`_ aren't currently supported by Sphinx and won't show up in the docs."
msgstr ""

#: ../../usage/extensions/napoleon.rst:252
msgid "Configuration"
msgstr ""

#: ../../usage/extensions/napoleon.rst:254
msgid "Listed below are all the settings used by napoleon and their default values. These settings can be changed in the Sphinx `conf.py` file. Make sure that \"sphinx.ext.napoleon\" is enabled in `conf.py`::"
msgstr ""

#: ../../usage/extensions/napoleon.rst:283
msgid "True to parse `Google style`_ docstrings. False to disable support for Google style docstrings. *Defaults to True.*"
msgstr ""

#: ../../usage/extensions/napoleon.rst:288
msgid "True to parse `NumPy style`_ docstrings. False to disable support for NumPy style docstrings. *Defaults to True.*"
msgstr ""

#: ../../usage/extensions/napoleon.rst:293
msgid "True to list ``__init___`` docstrings separately from the class docstring. False to fall back to Sphinx's default behavior, which considers the ``__init___`` docstring as part of the class documentation. *Defaults to False.*"
msgstr ""

#: ../../usage/extensions/napoleon.rst:298
#: ../../usage/extensions/napoleon.rst:314
#: ../../usage/extensions/napoleon.rst:332
#: ../../usage/extensions/napoleon.rst:357
#: ../../usage/extensions/napoleon.rst:403
#: ../../usage/extensions/napoleon.rst:431
#: ../../usage/extensions/napoleon.rst:473
msgid "**If True**::"
msgstr ""

#: ../../usage/extensions/napoleon.rst:310
msgid "True to include private members (like ``_membername``) with docstrings in the documentation. False to fall back to Sphinx's default behavior. *Defaults to False.*"
msgstr ""

#: ../../usage/extensions/napoleon.rst:328
msgid "True to include special members (like ``__membername__``) with docstrings in the documentation. False to fall back to Sphinx's default behavior. *Defaults to True.*"
msgstr ""

#: ../../usage/extensions/napoleon.rst:346
msgid "True to use the ``.. admonition::`` directive for the **Example** and **Examples** sections. False to use the ``.. rubric::`` directive instead. One may look better than the other depending on what HTML theme is used. *Defaults to False.*"
msgstr ""

#: ../../usage/extensions/napoleon.rst:351
#: ../../usage/extensions/napoleon.rst:396
#: ../../usage/extensions/napoleon.rst:422
#: ../../usage/extensions/napoleon.rst:466
msgid "This `NumPy style`_ snippet will be converted as follows::"
msgstr ""

#: ../../usage/extensions/napoleon.rst:363
#: ../../usage/extensions/napoleon.rst:408
#: ../../usage/extensions/napoleon.rst:438
#: ../../usage/extensions/napoleon.rst:478
msgid "**If False**::"
msgstr ""

#: ../../usage/extensions/napoleon.rst:371
msgid "True to use the ``.. admonition::`` directive for **Notes** sections. False to use the ``.. rubric::`` directive instead. *Defaults to False.*"
msgstr ""

#: ../../usage/extensions/napoleon.rst:374
msgid "The singular **Note** section will always be converted to a ``.. note::`` directive."
msgstr ""

#: ../../usage/extensions/napoleon.rst:379
#: ../../usage/extensions/napoleon.rst:389
msgid ":attr:`napoleon_use_admonition_for_examples`"
msgstr ""

#: ../../usage/extensions/napoleon.rst:383
msgid "True to use the ``.. admonition::`` directive for **References** sections. False to use the ``.. rubric::`` directive instead. *Defaults to False.*"
msgstr ""

#: ../../usage/extensions/napoleon.rst:393
msgid "True to use the ``:ivar:`` role for instance variables. False to use the ``.. attribute::`` directive instead. *Defaults to False.*"
msgstr ""

#: ../../usage/extensions/napoleon.rst:418
msgid "True to use a ``:param:`` role for each function parameter. False to use a single ``:parameters:`` role for all the parameters. *Defaults to True.*"
msgstr ""

#: ../../usage/extensions/napoleon.rst:447
msgid "True to use a ``:keyword:`` role for each function keyword argument. False to use a single ``:keyword arguments:`` role for all the keywords. *Defaults to True.*"
msgstr ""

#: ../../usage/extensions/napoleon.rst:452
msgid "This behaves similarly to  :attr:`napoleon_use_param`. Note unlike docutils, ``:keyword:`` and ``:param:`` will not be treated the same way - there will be a separate \"Keyword Arguments\" section, rendered in the same fashion as \"Parameters\" section (type links created if possible)"
msgstr ""

#: ../../usage/extensions/napoleon.rst:459
msgid ":attr:`napoleon_use_param`"
msgstr ""

#: ../../usage/extensions/napoleon.rst:463
msgid "True to use the ``:rtype:`` role for the return type. False to output the return type inline with the description. *Defaults to True.*"
msgstr ""

